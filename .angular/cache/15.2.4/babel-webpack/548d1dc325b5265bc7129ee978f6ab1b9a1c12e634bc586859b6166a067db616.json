{"ast":null,"code":"import { Book } from \"../book-list/book\";\nimport * as i0 from \"@angular/core\";\nexport class BookService {\n  constructor() {\n    this.BOOKS = [new Book('123456', 'Podstawy C#', 'Scot Hanselman', 'Tech', 'Książka dla programistów', 3), new Book('456789', 'C# Zaawansowany', 'Scot Hanselman', 'Tech', 'Książka dla zaawansowanych programistów', 4), new Book('678910', 'Specjalista C#', 'Scot Hanselman', 'Tech', 'Książka dla specjalistów C#', 5)];\n  }\n  getBooks() {\n    return Promise.resolve(this.BOOKS);\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)();\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,mBAAmB;;AAGxC,OAAM,MAAOC,WAAW;EADxBC;IAGY,UAAK,GAAW,CACpB,IAAIF,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,EAAE,0BAA0B,EAAE,CAAC,CAAC,EAC1F,IAAIA,IAAI,CAAC,QAAQ,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,MAAM,EAAE,yCAAyC,EAAE,CAAC,CAAC,EAC7G,IAAIA,IAAI,CAAC,QAAQ,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,MAAM,EAAE,6BAA6B,EAAE,CAAC,CAAC,CACnG;;EAEDG,QAAQ;IACJ,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC;EACtC;;AAVSL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAM,SAAXN,WAAW;AAAA","names":["Book","BookService","constructor","getBooks","Promise","resolve","BOOKS","factory"],"sourceRoot":"","sources":["C:\\Users\\lgulczynski\\Desktop\\Kurs Angular\\my-first-project\\src\\app\\services\\book.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\r\nimport { Book } from \"../book-list/book\";\r\n\r\n@Injectable()\r\nexport class BookService {\r\n\r\n    private BOOKS: Book[] = [\r\n        new Book('123456', 'Podstawy C#', 'Scot Hanselman', 'Tech', 'Książka dla programistów', 3),\r\n        new Book('456789', 'C# Zaawansowany', 'Scot Hanselman', 'Tech', 'Książka dla zaawansowanych programistów', 4),\r\n        new Book('678910', 'Specjalista C#', 'Scot Hanselman', 'Tech', 'Książka dla specjalistów C#', 5),\r\n    ] \r\n\r\n    getBooks(): Promise<Book[]> {\r\n        return Promise.resolve(this.BOOKS);\r\n    } \r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}